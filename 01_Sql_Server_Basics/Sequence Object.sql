USE TestTempDB;
-- A Sequence Object in SQL Server is a user-defined schema-bound object that generates a sequence of numeric values according to the specification provided. It is similar to identity columns but more flexible, as it can be used across multiple tables and for purposes other than primary keys.

-- Properties of a Sequence Object
-- Start Value: The first value generated by the sequence.
-- Increment: The step value for generating the next number.
-- Min Value: The minimum value the sequence can generate.
-- Max Value: The maximum value the sequence can generate.
-- Cycle Option: Specifies whether the sequence restarts when it reaches the max or min value.
-- Cache Option: Improves performance by pre-allocating a set of values in memory.
-- Data Type: The numeric type of the sequence values, such as BIGINT, INT, SMALLINT, etc.

--Syntax
-- CREATE SEQUENCE [schema_name . ] sequence_name
--     [ AS [ built_in_integer_type | user-defined_integer_type ] ]
--     [ START WITH <constant> ]
--     [ INCREMENT BY <constant> ]
--     [ { MINVALUE [ <constant> ] } | { NO MINVALUE } ]
--     [ { MAXVALUE [ <constant> ] } | { NO MAXVALUE } ]
--     [ CYCLE | { NO CYCLE } ]
--     [ { CACHE [ <constant> ] } | { NO CACHE } ]
--     [ ; ] 

--Creating an Incrementing Sequence Object
CREATE SEQUENCE dbo.TestTempDB AS INT START WITH 1 INCREMENT BY 1;
--Generate the Next Sequence Value 
SELECT NEXT VALUE FOR dbo.TestTempDB

-- Retriving current sequence value
	--Get current sequence Value
	SELECT * FROM sys.sequences WHERE name='TestTempDB';
	--Alter the object to reset the sequence value
	ALTER SEQUENCE dbo.TestTempDB RESTART WITH 1;

-- Use the sequence value in an insert statement in sql server
CREATE TABLE Employees_v10(
	Id INT PRIMARY KEY,
	Name NVARCHAR(50),
	Gender NVARCHAR(10)
)
--Generate and Inser Sequence Values
INSERT INTO Employees_v10 VALUES (NEXT VALUE FOR dbo.TestTempDB, 'Ben', 'Male');
INSERT INTO Employees_v10 VALUES (NEXT VALUE FOR dbo.TestTempDB, 'Sara', 'Female');

SELECT * FROM Employees_v10;

-- Decrementing Sequence
--Note Apply this query on diffrent db.
CREATE SEQUENCE dbo.TestDB AS INT START WITH 100 INCREMENT BY -1;
SELECT NEXT VALUE FOR dbo.TestDB;

--Specifing MIN and MAX values for the Sequence
CREATE SEQUENCE dbo.PERSONDB START WITH 100 INCREMENT BY 10 MINVALUE 100 MAXVALUE 150;
SELECT NEXT VALUE FOR dbo.PERSONDB;
--Note Apply this query on diffrent db.
--Recycling the Sequence values
ALTER SEQUENCE dbo.TestTempDB INCREMENT BY 10 MINVALUE 100 MAXVALUE 150 CYCLE 

--Improve the Performance of Sequence Object
CREATE SEQUENCE dbo.TestTempDB START WITH 1 INCREMENT BY 1 CACHE 10

--DROP SEQUENCE OBJECT
DROP SEQUENCE dbo.TestDB;

--Associate Sequence OBJECT
CREATE DATABASE Customers;

CREATE TABLE dbo.Customer_v10(
	ID INT DEFAULT(NEXT VALUE FOR dbo.TestTempDB), 
	Name VARCHAR(100)
)

INSERt INTO dbo.Customer_v10(Name)
	VALUES('Sara'), 
	('Rout')

SELECT  * FROM Customer_v10;		